{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../app.js","sourcesContent":["function initMap(){\n    var styles = [{\n      stylers: [\n        { saturation: -100 }\n      ]\n    }];\n\n    var styledMap = new google.maps.StyledMapType(styles, {name: \"Styled Map\"});\n\n    jQuery('.map').each(function(i,map){\n\n        var $map = jQuery(map);\n\n        var id = $map.attr('id');\n\n        var center = {\n            lat: parseFloat($map.data('center-latitude')),\n            lng: parseFloat($map.data('center-longitude'))\n        };\n\n        var googleMap = new google.maps.Map(document.getElementById(id), {\n            zoom: parseInt($map.data('zoom')),\n            center: center,\n            scrollwheel: false,\n            disableDefaultUI: true,\n            mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']\n        });\n\n        googleMap.mapTypes.set('map_style', styledMap);\n        googleMap.setMapTypeId('map_style');\n\n        var markersInfo = JSON.parse($map.data('markers'));\n\n        jQuery.each(markersInfo, function(i, markerInfo){\n            var marker = getMarker(markerInfo, googleMap);\n        });\n\n    });\n}\n\nfunction getMarker(markerInfo, map){\n    var center = {\n            lat: parseFloat(markerInfo.latitude),\n            lng: parseFloat(markerInfo.longitude)\n        };\n    return new google.maps.Marker({\n            position: center,\n            icon: markerInfo.icon,\n            map: map\n        });\n}\n\nvar TopImageLoader = function($component){\n\n    this.$component = $component;\n    this.$imageHolder = this.$component.find('.top-img-section__background');\n    this.images = {\n        small: this.$imageHolder.data('image-small'),\n        big: this.$imageHolder.data('image-big')\n    };\n\n};\n\nTopImageLoader.prototype.loadImage = function(screenSize){\n\n    this.$imageHolder.html('');\n\n    var that = this;\n\n    var $image;\n\n    if(screenSize == 'BIG'){\n        $image = jQuery('<img src=\"'+ this.images.big +'\" />');\n    }else{\n        $image = jQuery('<img src=\"'+ this.images.small +'\" />');\n    }\n\n    $image.css({display: 'none'});\n\n    $image.load(function(){\n        that.$imageHolder.append($image);\n        $image.fadeIn();\n    });\n\n};\n\n\njQuery(function() {\n    var topImageModule = new TopImageLoader(jQuery('.top-img-section'));\n    //console.log(topImageModule);\n\n\n        topImageModule.loadImage('BIG');\n\n\n});\n"]}